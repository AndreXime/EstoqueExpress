<!DOCTYPE html>
<html lang="pt-br">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Dashboard</title>
    <link rel="stylesheet" href="/css/bootstrap.min.css">
    <link rel="icon" type="image/png" href="/img/icon.png">
    <style>
        /* Animação para os card aparecer suavemente */
        @keyframes aparecer {
          0% {
            transform: scale(0);
            opacity: 0;
          }
          100% {
            transform: scale(1);
            opacity: 1;
          }
        }

        .animar-criacao {
          animation: aparecer 1s ease-in-out;
        }

        body,html{
          height: 100%;
        }

        .popup {
          position: fixed;
          top: 20px;
          right: 20px;
          background-color: #4CAF50; /* Verde */
          color: white;
          padding: 15px;
          border-radius: 5px;
          transition: opacity 0.5s ease;
        }

    </style>
</head>
<body class="d-flex flex-column">
<%- include('partials/nav') %>

<main class="container flex-grow-1 main-content">
  <div class="container mt-5">
    <div class="row mt-3">
      <div class="col-md mb-4">
          <div class="card animar-criacao">
              <div class="card-body">
                <form id="cardCreator">
                  <div class="row">
                    <div class="mb-3 col-md-4">
                      <label for="nameProduct" class="form-label">Nome do produto</label>
                      <input id="nameProduct" class="form-control" type="text" name="nameProduct">
                    </div>
                    <div class="mb-3 col-md-4">
                      <label for="priceProduct" class="form-label">Preço do produto</label>
                      <input id="priceProduct" class="form-control" type="text" name="priceProduct">
                    </div>
                    <div class="mb-3 col-md-4">
                      <label for="categoryProduct" class="form-label">Categoria do produto</label>
                      <input id="categoryProduct" class="form-control" type="text" name="categoryProduct">
                    </div>
                  </div>
                  <div class="row">
                    <div class="col-md-4 mb-3">
                      <label for="qtdProduct" class="form-label">Quantidade do produto</label>
                      <input class="form-control" type="number" name="qtdProduct" id="qtdProduct" oninput="validateNumber(this)">
                    </div>
                    <div class="col-md-4 mb-3">
                      <label for="dateProduct" class="form-label">Vencimento do produto</label>
                      <input class="form-control" type="date" name="dateProduct" id="dateProduct">
                    </div>
                    <div class="col-md-4 mb-3">
                      <label for="fornecedorProduct" class="form-label">Fornecedor do produto</label>
                      <input id="fornecedorProduct" class="form-control" type="text" name="fornecedorProduct">
                    </div>
                  </div>
                  <p style="display: none;" id="id"><%= id %></p>
                  <input class="btn btn-primary" id="criarObjeto" type="submit" value="Criar objeto">
                </form>
              </div>
              <div id="popup" class="popup" style="display: none;">
                Objeto criado com sucesso!
              </div>
          </div>
      </div>
    </div>
    <div id="objetoContainer" class="row mt-2">
      <% produtos.forEach(card => { %>
        <div class="col-md-3 mb-4 produto">
          <div class="card animar-criacao">
            <div class="card-body">
              <h4 class="card-title text-center"><%= card.titulo %></h4>
              <div class="row">
                <div class="col-md-12">
                  <div class="row">
                      <div class="col-6">
                        <h6 class="card-title mb-3">R$: <%= card.preco %></h6>
                      </div>
                      <div class="col-6">
                        <h6 class="card-title mb-3">Qtd: <%= card.quantidade %></h6>
                      </div>
                    </div>
                    <h6 class="card-title mb-3">Validade: <%= card.validade %></h6>
                    <h6 class="card-title mb-3">Categoria: <%= card.categoria %></h6>
                    <h6 class="card-title mb-3">Fornecedor: <%= card.fornecedor %></h6>
                    <h6 class="card-title mb-3">Criado em: <%= card.criadoEm %></h6>
                  </div>
                  <div class="col-md-12 botoes d-flex justify-content-between">
                      <p style="display:none" id="idProduto"> <%= card._id %> </p>
                      <button class="btn btn-info atualizar">Atualizar</button>
                      <button class="btn btn-danger deletar">Apagar</button>
                  </div>
                </div>
              </div>
            </div>
        </div>
      <% });%>   
    </div>
  </div>
</main>

<%- include('partials/nav') %>

<script src="/js/bootstrap.bundle.js"></script>
<script src="/js/popper.min.js"></script>
<script>
document.getElementById('cardCreator').addEventListener('submit', () => {
    const popup = document.getElementById('popup');
    popup.style.display = 'block'; // Mostra o popup

    // Esconde o popup após 3 segundos
    setTimeout(() => {
        popup.style.opacity = '0'; // Anima a opacidade
        setTimeout(() => {
            popup.style.display = 'none'; // Remove do DOM após a animação
            popup.style.opacity = '1'; // Reseta a opacidade para a próxima vez
        }, 500); // Espera o tempo da animação
    }, 3000); // Tempo que o popup ficará visível
});

atualizar();

document.getElementById ('cardCreator').addEventListener('submit', function(event) {
    event.preventDefault();

    const formData = new FormData(event.target);
    const titulo = formData.get('nameProduct');
    const quantidade = formData.get('qtdProduct');
    const validade = formData.get('dateProduct');
    const preco = formData.get('priceProduct');
    const categoria = formData.get('categoryProduct');
    const fornecedor = formData.get('fornecedorProduct');
    const criadoEm = new Date().toLocaleDateString();
    const id = document.getElementById('id').innerText.trim();

    const response = fetch(`/api/addProduto?id=${id}`,{
      method: 'Post',
      headers: { 'Content-Type': 'application/json' },
      body: JSON.stringify({
        titulo, quantidade, validade,
        preco,categoria,fornecedor,criadoEm
      })
    });

    // Cria o elemento a ser animado
    const card = document.createElement('div');
    card.classList.add('col-md-3', 'mb-4', 'produto');
    card.innerHTML = `
      <div class="card animar-criacao">
        <div class="card-body">
          <h4 class="card-title text-center">${titulo}</h4>
          <div class="row">
            <div class="col-md-12">
              <div class="row">
                <div class="col-6">
                    <h6 class="card-title mb-3">R$:${preco}</h6>
                </div>
                  <div class="col-6">
                    <h6 class="card-title mb-3">Qtd:${quantidade}</h6>
                  </div>
                </div>
                <h6 class="card-title mb-3">Validade:${validade} </h6>
                <h6 class="card-title mb-3">Categoria:${categoria} </h6>
                <h6 class="card-title mb-3">Fornecedor:${fornecedor} </h6>
                <h6 class="card-title mb-3">Criado em:${criadoEm} </h6>
              </div>
          <div class="col-md-12 botoes d-flex justify-content-between">
            <p style="display:none" id="idProduto">${response}</p>
            <button class="btn btn-info atualizar">Atualizar</button>
            <button class="btn btn-danger deletar">Apagar</button>
          </div>
        </div>
      </div>
    `;
    
    // Adiciona o card ao container
    document.getElementById('objetoContainer').appendChild(card);
    
    // Atualizar os eventListener de deletar
    atualizar();
  });

function validateNumber(input) {
  // Remove todos os caracteres que não sejam números
  input.value = input.value.replace(/\D/g, '');
}

function atualizar(){
  const botoes = document.querySelectorAll('.deletar');
  botoes.forEach(function(botao) {
      botao.addEventListener('click', function() {
        const id = document.getElementById('id').innerText.trim();
        const closest = botao.closest('.botoes');
        const idproduto = closest.querySelector('#idProduto').textContent.trim();

        const response = fetch(`/api/removeProduto?id=${id}&idproduto=${idproduto}`,{
          method: 'Post',
          headers: { 'Content-Type': 'application/json' },
        });

        const card = botao.closest('.produto');
        card.remove();
      });
  });
}

</script>
</body>
</html>